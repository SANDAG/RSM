2023-03-08 17:33:59,630 - INFO (extract_data): Loading households
2023-03-08 17:34:01,691 - INFO (extract_data): Loading individualTrips
2023-03-08 17:35:04,000 - INFO (extract_data): Loading jointTrips
2023-03-08 17:35:09,941 - INFO (extract_data): Loading transit_onoff
2023-03-08 17:35:10,201 - INFO (extract_data): Loading internalExternalTrips
2023-03-08 17:35:10,854 - INFO (extract_data): Loading airportCBXTrips
2023-03-08 17:35:10,894 - INFO (extract_data): Loading airportSANTrips
2023-03-08 17:35:11,094 - INFO (extract_data): Loading commercialVehicleTrips
2023-03-08 17:35:15,279 - INFO (extract_data): Loading crossBorderTrips
2023-03-08 17:35:17,264 - INFO (extract_data): Loading externalInternalTrips
2023-03-08 17:35:19,084 - INFO (extract_data): Loading externalExternalTrips
2023-03-08 17:35:19,108 - INFO (extract_data): Loading truckTrips
2023-03-08 17:35:19,432 - INFO (extract_data): Loading visitorTrips
2023-03-08 17:35:20,157 - INFO (extract_data): Loading hwyload_AM
2023-03-08 17:35:20,440 - INFO (extract_data): Loading hwyload_EA
2023-03-08 17:35:20,725 - INFO (extract_data): Loading hwyload_EV
2023-03-08 17:35:20,971 - INFO (extract_data): Loading hwyload_MD
2023-03-08 17:35:21,231 - INFO (extract_data): Loading hwyload_PM
2023-03-08 17:35:21,488 - INFO (extract_data): Loading hwyTcad
2023-03-08 17:35:23,458 - INFO (extract_data): Loading mgra_crosswalk
2023-03-08 17:35:23,484 - INFO (extract_data): Loading households_org
2023-03-08 17:35:24,540 - INFO (process): Renaming airportCBXTrips columns using {'tripPurpose': 'tripPurposeDestination'}
2023-03-08 17:35:24,542 - INFO (process): Renaming airportSANTrips columns using {'tripPurpose': 'tripPurposeDestination'}
2023-03-08 17:35:24,556 - INFO (process): Adding column 'tripPurposeDestination' to internalExternalTrips
2023-03-08 17:35:24,576 - INFO (process): Adding column 'tripPurposeDestination' to externalExternalTrips
2023-03-08 17:35:24,582 - INFO (process): Renaming externalInternalTrips columns using {'tripPurpose': 'tripPurposeDestination'}
2023-03-08 17:35:24,657 - INFO (process): Adding column 'tripPurposeDestination' to truckTrips
2023-03-08 17:35:24,667 - INFO (process): Renaming visitorTrips columns using {'tripPurpose': 'tripPurposeDestination'}
2023-03-08 17:35:24,709 - INFO (concat): Concatenating tables ['individualTrips', 'jointTrips', 'internalExternalTrips', 'airportCBXTrips', 'airportSANTrips', 'commercialVehicleTrips', 'crossBorderTrips', 'externalInternalTrips', 'externalExternalTrips', 'truckTrips', 'visitorTrips'] into trips
2023-03-08 17:35:35,971 - INFO (concat): Concatenating tables ['hwyload_AM.csv', 'hwyload_EA.csv', 'hwyload_EV.csv', 'hwyload_MD.csv', 'hwyload_PM.csv'] into highway_load
2023-03-08 17:35:36,015 - INFO (merge): Merging tables households_org, mgra_crosswalk into households_org
2023-03-08 17:35:36,240 - INFO (merge): Merging tables households, mgra_crosswalk into households
2023-03-08 17:35:36,751 - INFO (process): Replacing MODE values in transit_onoff using {'PREM': 'Premium Transit', 'BUS': 'Local Bus', 'ALLPEN': 'Local Bus and Premium Transit'}
2023-03-08 17:35:36,788 - INFO (process): Replacing ACCESSMODE values in transit_onoff using {'KNR': 'Kiss and Ride to Transit', 'PNR': 'Park and Ride to Transit', 'WLK': 'Walk to Transit'}
2023-03-08 17:35:36,849 - INFO (process): Renaming trips columns using {'table': 'model'}
2023-03-08 17:35:48,948 - INFO (process): Raw evaluating trips['model'] = trips['model'].str.replace('Trips', '')
2023-03-08 17:36:00,155 - INFO (process): Replacing tripMode values in trips using {'Light Heavy Duty Truck': 'Truck', 'Medium Heavy Duty Truck': 'Truck', 'Heavy Heavy Duty Truck': 'Truck'}
2023-03-08 17:36:02,073 - INFO (process): Raw evaluating trips['tripMode'] = np.select([(trips['tripMode'].str.contains('to Transit'))], ['Transit'], default=trips['tripMode'])
2023-03-08 17:36:09,145 - INFO (process): Replacing table values in highway_load using {"hwyload_EA": "EA","hwyload_AM": "AM","hwyload_MD": "MD","hwyload_PM": "PM","hwyload_EV": "EV"}
2023-03-08 17:36:09,215 - INFO (process): Raw evaluating highway_network = pd.wide_to_long(df=hwyTcad,stubnames=["ABTM","BATM","ABTX","BATX","ABPRELOAD","BAPRELOAD"],i=["ID","Length","IFC"],j="timePeriod",sep="_",suffix="\w+").reset_index()
2023-03-08 17:36:32,016 - INFO (process): Raw evaluating highway_network = highway_network.fillna(0)
2023-03-08 17:36:32,964 - INFO (process): Replacing IFC values in highway_network using {1:"Freeway",2:"Prime Arterial",3:"Major Arterial",4:"Collector",5:"Local Collector",6:"Rural Coolector",7:"Local Road",8:"Freeway Connector Ramp",9:"Local Ramp",10:"Zone Connector"}
2023-03-08 17:36:32,978 - INFO (process): Adding column 'AB_Flow_Auto' to highway_load
2023-03-08 17:36:33,022 - INFO (process): Adding column 'BA_Flow_Auto' to highway_load
2023-03-08 17:36:33,058 - INFO (process): Adding column 'AB_Flow_Truck' to highway_load
2023-03-08 17:36:33,068 - INFO (process): Adding column 'BA_Flow_Truck' to highway_load
2023-03-08 17:36:33,084 - INFO (process): Adding column 'AB_Flow' to highway_load
2023-03-08 17:36:33,097 - INFO (process): Adding column 'BA_flow' to highway_load
2023-03-08 17:36:33,108 - INFO (process): Raw evaluating highway_load = highway_load.fillna(0)
2023-03-08 17:36:33,343 - INFO (process): Replacing departTimeFiveTod values in trips using {1: 'EA', 2: 'AM', 3: 'MD', 4: 'PM', 5: 'EV'}
2023-03-08 17:36:37,605 - INFO (merge): Merging tables highway_network, highway_load into network
2023-03-08 17:36:59,084 - INFO (process): Adding column 'vmt_auto' to network
2023-03-08 17:36:59,110 - INFO (process): Adding column 'vmt_truck' to network
2023-03-08 17:36:59,140 - INFO (process): Adding column 'vmt_bus' to network
2023-03-08 17:36:59,172 - INFO (process): Adding column 'vmt_total' to network
2023-03-08 17:36:59,193 - INFO (process): Adding column 'flow_total' to network
2023-03-08 17:36:59,206 - INFO (process): Adding column 'voc' to network
2023-03-08 17:36:59,221 - INFO (eval_expressions): Evaluating trips.groupby(['tripMode'], dropna=False)['weightTrip'].sum()
2023-03-08 17:37:00,256 - INFO (eval_expressions): Evaluating trips.query("originMGRA == destinationMGRA", engine="python").groupby(['tripMode'], dropna=False)['distanceDrive'].sum()
2023-03-08 17:37:04,699 - INFO (eval_expressions): Evaluating transit_onoff.query("TOD=='EA'", engine="python").groupby(['MODE'], dropna=False)['BOARDINGS'].sum()
2023-03-08 17:37:04,722 - INFO (eval_expressions): Evaluating transit_onoff.query("TOD=='AM'", engine="python").groupby(['MODE'], dropna=False)['BOARDINGS'].sum()
2023-03-08 17:37:04,763 - INFO (eval_expressions): Evaluating transit_onoff.query("TOD=='MD'", engine="python").groupby(['MODE'], dropna=False)['BOARDINGS'].sum()
2023-03-08 17:37:04,785 - INFO (eval_expressions): Evaluating transit_onoff.query("TOD=='PM'", engine="python").groupby(['MODE'], dropna=False)['BOARDINGS'].sum()
2023-03-08 17:37:04,808 - INFO (eval_expressions): Evaluating transit_onoff.query("TOD=='EV'", engine="python").groupby(['MODE'], dropna=False)['BOARDINGS'].sum()
2023-03-08 17:37:04,848 - INFO (eval_expressions): Evaluating trips.query("departTimeFiveTod == 'EA'", engine="python").groupby(['tripPurposeDestination'], dropna=False)['weightTrip'].sum()
2023-03-08 17:37:06,178 - INFO (eval_expressions): Evaluating trips.query("departTimeFiveTod == 'AM'", engine="python").groupby(['tripPurposeDestination'], dropna=False)['weightTrip'].sum()
2023-03-08 17:37:09,074 - INFO (eval_expressions): Evaluating trips.query("departTimeFiveTod == 'MD'", engine="python").groupby(['tripPurposeDestination'], dropna=False)['weightTrip'].sum()
2023-03-08 17:37:13,126 - INFO (eval_expressions): Evaluating trips.query("departTimeFiveTod == 'PM'", engine="python").groupby(['tripPurposeDestination'], dropna=False)['weightTrip'].sum()
2023-03-08 17:37:16,398 - INFO (eval_expressions): Evaluating trips.query("departTimeFiveTod == 'EV'", engine="python").groupby(['tripPurposeDestination'], dropna=False)['weightTrip'].sum()
2023-03-08 17:37:18,896 - INFO (eval_expressions): Evaluating trips.groupby(['originMGRA', 'destinationMGRA'], dropna=False)['weightTrip'].sum()
2023-03-08 17:37:20,783 - INFO (eval_expressions): Evaluating households.query("autos == 0", engine="python").groupby(['cluster_id'], dropna=False)['hhId'].count()
2023-03-08 17:37:20,978 - INFO (eval_expressions): Evaluating households.groupby(['cluster_id'], dropna=False)['hhId'].count()
2023-03-08 17:37:21,014 - INFO (eval_expressions): Evaluating households_org.groupby(['cluster_id'], dropna=False)['hhid'].count()
2023-03-08 17:37:21,070 - INFO (eval_expressions): Evaluating network.query("ifc_desc == 'Freeway'", engine="python").groupby(['ID'], dropna=False)['vmt_total'].sum()
2023-03-08 17:37:21,734 - INFO (eval_expressions): Evaluating network.query("ifc_desc == 'Freeway'", engine="python").groupby(['ID'], dropna=False)['flow_total'].sum()
2023-03-08 17:37:21,786 - INFO (eval_expressions): Evaluating network.query("ifc_desc == 'Freeway'", engine="python").groupby(['ID'], dropna=False)['voc'].sum()
2023-03-08 17:37:21,827 - INFO (eval_expressions): Evaluating network.groupby(['ifc_desc'], dropna=False)['vmt_total'].sum()
2023-03-08 17:37:21,845 - INFO (eval_expressions): Evaluating network.groupby(['ifc_desc'], dropna=False)['vmt_auto'].sum()
2023-03-08 17:37:21,885 - INFO (eval_expressions): Evaluating network.groupby(['ifc_desc'], dropna=False)['vmt_truck'].sum()
2023-03-08 17:37:21,905 - INFO (coalesce_expressions): Coalescing summary table trip_mode_summary
2023-03-08 17:37:21,906 - INFO (coalesce_expressions): Coalescing summary table intrazonal_distance_by_mode_summary
2023-03-08 17:37:21,907 - INFO (coalesce_expressions): Coalescing summary table transit_summary
2023-03-08 17:37:21,909 - INFO (coalesce_expressions): Coalescing summary table trip_tod_purpose_summary
2023-03-08 17:37:21,911 - INFO (coalesce_expressions): Coalescing summary table trip_od_summary
2023-03-08 17:37:21,960 - INFO (coalesce_expressions): Coalescing summary table zero_car_households_summary
2023-03-08 17:37:21,963 - INFO (coalesce_expressions): Coalescing summary table households_sample_mgra_summary
2023-03-08 17:37:21,964 - INFO (coalesce_expressions): Coalescing summary table households_mgra_summary
2023-03-08 17:37:21,966 - INFO (coalesce_expressions): Coalescing summary table network_summary
2023-03-08 17:37:21,967 - INFO (coalesce_expressions): Coalescing summary table vmt_summary
2023-03-08 17:37:21,969 - INFO (process): Raw evaluating transit_summary['PCT_EA'] = transit_summary['EA']/transit_summary['EA'].sum()
2023-03-08 17:37:21,970 - INFO (process): Raw evaluating transit_summary['PCT_AM'] = transit_summary['AM']/transit_summary['AM'].sum()
2023-03-08 17:37:21,971 - INFO (process): Raw evaluating transit_summary['PCT_MD'] = transit_summary['MD']/transit_summary['MD'].sum()
2023-03-08 17:37:21,972 - INFO (process): Raw evaluating transit_summary['PCT_PM'] = transit_summary['PM']/transit_summary['PM'].sum()
2023-03-08 17:37:21,973 - INFO (process): Raw evaluating transit_summary['PCT_EV'] = transit_summary['EV']/transit_summary['EV'].sum()
2023-03-08 17:37:21,974 - INFO (process): Raw evaluating trip_mode_summary['share'] = trip_mode_summary['num_trips']/trip_mode_summary['num_trips'].sum()
2023-03-08 17:37:21,975 - INFO (process): Raw evaluating trip_tod_purpose_summary['PCT_EA'] = trip_tod_purpose_summary['EA']/trip_tod_purpose_summary['EA'].sum()
2023-03-08 17:37:21,977 - INFO (process): Raw evaluating trip_tod_purpose_summary['PCT_AM'] = trip_tod_purpose_summary['AM']/trip_tod_purpose_summary['AM'].sum()
2023-03-08 17:37:21,978 - INFO (process): Raw evaluating trip_tod_purpose_summary['PCT_MD'] = trip_tod_purpose_summary['MD']/trip_tod_purpose_summary['MD'].sum()
2023-03-08 17:37:21,979 - INFO (process): Raw evaluating trip_tod_purpose_summary['PCT_PM'] = trip_tod_purpose_summary['PM']/trip_tod_purpose_summary['PM'].sum()
2023-03-08 17:37:21,980 - INFO (process): Raw evaluating trip_tod_purpose_summary['PCT_EV'] = trip_tod_purpose_summary['EV']/trip_tod_purpose_summary['EV'].sum()
2023-03-08 17:37:21,981 - INFO (process): Raw evaluating households_mgra_summary = pd.merge(households_mgra_summary, households_sample_mgra_summary,left_on='cluster_id', right_on='cluster_id')
2023-03-08 17:37:21,983 - INFO (process): Raw evaluating households_sample_mgra_summary['sample_rate'] = households_mgra_summary['sampled_households'] / households_mgra_summary['original_households']
2023-03-08 17:37:21,984 - INFO (process): Renaming vmt_summary columns using {'ifc_desc': 'class'}
2023-03-08 17:37:21,985 - INFO (process): Renaming zero_car_households_summary columns using {'cluster_id': 'mgra'}
2023-03-08 17:37:21,985 - INFO (process): Renaming households_sample_mgra_summary columns using {'cluster_id': 'mgra'}
2023-03-08 17:37:21,986 - INFO (write_results): Writing trip_mode_summary.csv
2023-03-08 17:37:21,991 - INFO (write_results): Writing intrazonal_distance_by_mode_summary.csv
2023-03-08 17:37:21,994 - INFO (write_results): Writing transit_summary.csv
2023-03-08 17:37:21,996 - INFO (write_results): Writing trip_tod_purpose_summary.csv
2023-03-08 17:37:21,998 - INFO (write_results): Writing trip_od_summary.csv
2023-03-08 17:37:23,384 - INFO (write_results): Writing zero_car_households_summary.csv
2023-03-08 17:37:23,387 - INFO (write_results): Writing households_sample_mgra_summary.csv
2023-03-08 17:37:23,390 - INFO (write_results): Writing households_mgra_summary.csv
2023-03-08 17:37:23,392 - INFO (write_results): Writing network_summary.csv
2023-03-08 17:37:23,402 - INFO (write_results): Writing vmt_summary.csv
