2023-03-08 17:37:32,666 - INFO (extract_data): Loading households
2023-03-08 17:37:34,572 - INFO (extract_data): Loading individualTrips
2023-03-08 17:38:39,543 - INFO (extract_data): Loading jointTrips
2023-03-08 17:38:45,771 - INFO (extract_data): Loading transit_onoff
2023-03-08 17:38:46,050 - INFO (extract_data): Loading internalExternalTrips
2023-03-08 17:38:46,727 - INFO (extract_data): Loading airportCBXTrips
2023-03-08 17:38:46,775 - INFO (extract_data): Loading airportSANTrips
2023-03-08 17:38:46,934 - INFO (extract_data): Loading commercialVehicleTrips
2023-03-08 17:38:50,994 - INFO (extract_data): Loading crossBorderTrips
2023-03-08 17:38:52,978 - INFO (extract_data): Loading externalInternalTrips
2023-03-08 17:38:56,331 - INFO (extract_data): Loading externalExternalTrips
2023-03-08 17:38:56,344 - INFO (extract_data): Loading truckTrips
2023-03-08 17:38:57,001 - INFO (extract_data): Loading visitorTrips
2023-03-08 17:38:57,759 - INFO (extract_data): Loading hwyload_AM
2023-03-08 17:38:58,040 - INFO (extract_data): Loading hwyload_EA
2023-03-08 17:38:58,309 - INFO (extract_data): Loading hwyload_EV
2023-03-08 17:38:58,593 - INFO (extract_data): Loading hwyload_MD
2023-03-08 17:38:58,898 - INFO (extract_data): Loading hwyload_PM
2023-03-08 17:38:59,191 - INFO (extract_data): Loading hwyTcad
2023-03-08 17:39:00,969 - INFO (extract_data): Loading mgra_crosswalk
2023-03-08 17:39:00,994 - INFO (extract_data): Loading households_org
2023-03-08 17:39:02,066 - INFO (process): Renaming airportCBXTrips columns using {'tripPurpose': 'tripPurposeDestination'}
2023-03-08 17:39:02,071 - INFO (process): Renaming airportSANTrips columns using {'tripPurpose': 'tripPurposeDestination'}
2023-03-08 17:39:02,083 - INFO (process): Adding column 'tripPurposeDestination' to internalExternalTrips
2023-03-08 17:39:02,101 - INFO (process): Adding column 'tripPurposeDestination' to externalExternalTrips
2023-03-08 17:39:02,104 - INFO (process): Renaming externalInternalTrips columns using {'tripPurpose': 'tripPurposeDestination'}
2023-03-08 17:39:02,204 - INFO (process): Adding column 'tripPurposeDestination' to truckTrips
2023-03-08 17:39:02,211 - INFO (process): Renaming visitorTrips columns using {'tripPurpose': 'tripPurposeDestination'}
2023-03-08 17:39:02,244 - INFO (concat): Concatenating tables ['individualTrips', 'jointTrips', 'internalExternalTrips', 'airportCBXTrips', 'airportSANTrips', 'commercialVehicleTrips', 'crossBorderTrips', 'externalInternalTrips', 'externalExternalTrips', 'truckTrips', 'visitorTrips'] into trips
2023-03-08 17:39:12,252 - INFO (concat): Concatenating tables ['hwyload_AM.csv', 'hwyload_EA.csv', 'hwyload_EV.csv', 'hwyload_MD.csv', 'hwyload_PM.csv'] into highway_load
2023-03-08 17:39:12,296 - INFO (merge): Merging tables households_org, mgra_crosswalk into households_org
2023-03-08 17:39:12,520 - INFO (merge): Merging tables households, mgra_crosswalk into households
2023-03-08 17:39:12,996 - INFO (process): Replacing MODE values in transit_onoff using {'PREM': 'Premium Transit', 'BUS': 'Local Bus', 'ALLPEN': 'Local Bus and Premium Transit'}
2023-03-08 17:39:13,033 - INFO (process): Replacing ACCESSMODE values in transit_onoff using {'KNR': 'Kiss and Ride to Transit', 'PNR': 'Park and Ride to Transit', 'WLK': 'Walk to Transit'}
2023-03-08 17:39:13,072 - INFO (process): Renaming trips columns using {'table': 'model'}
2023-03-08 17:39:26,258 - INFO (process): Raw evaluating trips['model'] = trips['model'].str.replace('Trips', '')
2023-03-08 17:39:38,278 - INFO (process): Replacing tripMode values in trips using {'Light Heavy Duty Truck': 'Truck', 'Medium Heavy Duty Truck': 'Truck', 'Heavy Heavy Duty Truck': 'Truck'}
2023-03-08 17:39:40,299 - INFO (process): Raw evaluating trips['tripMode'] = np.select([(trips['tripMode'].str.contains('to Transit'))], ['Transit'], default=trips['tripMode'])
2023-03-08 17:39:47,787 - INFO (process): Replacing table values in highway_load using {"hwyload_EA": "EA","hwyload_AM": "AM","hwyload_MD": "MD","hwyload_PM": "PM","hwyload_EV": "EV"}
2023-03-08 17:39:47,835 - INFO (process): Raw evaluating highway_network = pd.wide_to_long(df=hwyTcad,stubnames=["ABTM","BATM","ABTX","BATX","ABPRELOAD","BAPRELOAD"],i=["ID","Length","IFC"],j="timePeriod",sep="_",suffix="\w+").reset_index()
2023-03-08 17:40:09,951 - INFO (process): Raw evaluating highway_network = highway_network.fillna(0)
2023-03-08 17:40:10,931 - INFO (process): Replacing IFC values in highway_network using {1:"Freeway",2:"Prime Arterial",3:"Major Arterial",4:"Collector",5:"Local Collector",6:"Rural Coolector",7:"Local Road",8:"Freeway Connector Ramp",9:"Local Ramp",10:"Zone Connector"}
2023-03-08 17:40:10,946 - INFO (process): Adding column 'AB_Flow_Auto' to highway_load
2023-03-08 17:40:10,986 - INFO (process): Adding column 'BA_Flow_Auto' to highway_load
2023-03-08 17:40:11,023 - INFO (process): Adding column 'AB_Flow_Truck' to highway_load
2023-03-08 17:40:11,031 - INFO (process): Adding column 'BA_Flow_Truck' to highway_load
2023-03-08 17:40:11,046 - INFO (process): Adding column 'AB_Flow' to highway_load
2023-03-08 17:40:11,057 - INFO (process): Adding column 'BA_flow' to highway_load
2023-03-08 17:40:11,067 - INFO (process): Raw evaluating highway_load = highway_load.fillna(0)
2023-03-08 17:40:11,304 - INFO (process): Replacing departTimeFiveTod values in trips using {1: 'EA', 2: 'AM', 3: 'MD', 4: 'PM', 5: 'EV'}
2023-03-08 17:40:15,915 - INFO (merge): Merging tables highway_network, highway_load into network
2023-03-08 17:40:37,278 - INFO (process): Adding column 'vmt_auto' to network
2023-03-08 17:40:37,305 - INFO (process): Adding column 'vmt_truck' to network
2023-03-08 17:40:37,336 - INFO (process): Adding column 'vmt_bus' to network
2023-03-08 17:40:37,367 - INFO (process): Adding column 'vmt_total' to network
2023-03-08 17:40:37,389 - INFO (process): Adding column 'flow_total' to network
2023-03-08 17:40:37,403 - INFO (process): Adding column 'voc' to network
2023-03-08 17:40:37,418 - INFO (eval_expressions): Evaluating trips.groupby(['tripMode'], dropna=False)['weightTrip'].sum()
2023-03-08 17:40:38,534 - INFO (eval_expressions): Evaluating trips.query("originMGRA == destinationMGRA", engine="python").groupby(['tripMode'], dropna=False)['distanceDrive'].sum()
2023-03-08 17:40:42,739 - INFO (eval_expressions): Evaluating transit_onoff.query("TOD=='EA'", engine="python").groupby(['MODE'], dropna=False)['BOARDINGS'].sum()
2023-03-08 17:40:42,761 - INFO (eval_expressions): Evaluating transit_onoff.query("TOD=='AM'", engine="python").groupby(['MODE'], dropna=False)['BOARDINGS'].sum()
2023-03-08 17:40:42,811 - INFO (eval_expressions): Evaluating transit_onoff.query("TOD=='MD'", engine="python").groupby(['MODE'], dropna=False)['BOARDINGS'].sum()
2023-03-08 17:40:42,842 - INFO (eval_expressions): Evaluating transit_onoff.query("TOD=='PM'", engine="python").groupby(['MODE'], dropna=False)['BOARDINGS'].sum()
2023-03-08 17:40:42,864 - INFO (eval_expressions): Evaluating transit_onoff.query("TOD=='EV'", engine="python").groupby(['MODE'], dropna=False)['BOARDINGS'].sum()
2023-03-08 17:40:42,904 - INFO (eval_expressions): Evaluating trips.query("departTimeFiveTod == 'EA'", engine="python").groupby(['tripPurposeDestination'], dropna=False)['weightTrip'].sum()
2023-03-08 17:40:44,146 - INFO (eval_expressions): Evaluating trips.query("departTimeFiveTod == 'AM'", engine="python").groupby(['tripPurposeDestination'], dropna=False)['weightTrip'].sum()
2023-03-08 17:40:47,226 - INFO (eval_expressions): Evaluating trips.query("departTimeFiveTod == 'MD'", engine="python").groupby(['tripPurposeDestination'], dropna=False)['weightTrip'].sum()
2023-03-08 17:40:51,598 - INFO (eval_expressions): Evaluating trips.query("departTimeFiveTod == 'PM'", engine="python").groupby(['tripPurposeDestination'], dropna=False)['weightTrip'].sum()
2023-03-08 17:40:55,121 - INFO (eval_expressions): Evaluating trips.query("departTimeFiveTod == 'EV'", engine="python").groupby(['tripPurposeDestination'], dropna=False)['weightTrip'].sum()
2023-03-08 17:40:57,688 - INFO (eval_expressions): Evaluating trips.groupby(['originMGRA', 'destinationMGRA'], dropna=False)['weightTrip'].sum()
2023-03-08 17:41:00,332 - INFO (eval_expressions): Evaluating households.query("autos == 0", engine="python").groupby(['cluster_id'], dropna=False)['hhId'].count()
2023-03-08 17:41:00,521 - INFO (eval_expressions): Evaluating households.groupby(['cluster_id'], dropna=False)['hhId'].count()
2023-03-08 17:41:00,559 - INFO (eval_expressions): Evaluating households_org.groupby(['cluster_id'], dropna=False)['hhid'].count()
2023-03-08 17:41:00,622 - INFO (eval_expressions): Evaluating network.query("ifc_desc == 'Freeway'", engine="python").groupby(['ID'], dropna=False)['vmt_total'].sum()
2023-03-08 17:41:01,259 - INFO (eval_expressions): Evaluating network.query("ifc_desc == 'Freeway'", engine="python").groupby(['ID'], dropna=False)['flow_total'].sum()
2023-03-08 17:41:01,332 - INFO (eval_expressions): Evaluating network.query("ifc_desc == 'Freeway'", engine="python").groupby(['ID'], dropna=False)['voc'].sum()
2023-03-08 17:41:01,373 - INFO (eval_expressions): Evaluating network.groupby(['ifc_desc'], dropna=False)['vmt_total'].sum()
2023-03-08 17:41:01,392 - INFO (eval_expressions): Evaluating network.groupby(['ifc_desc'], dropna=False)['vmt_auto'].sum()
2023-03-08 17:41:01,431 - INFO (eval_expressions): Evaluating network.groupby(['ifc_desc'], dropna=False)['vmt_truck'].sum()
2023-03-08 17:41:01,453 - INFO (coalesce_expressions): Coalescing summary table trip_mode_summary
2023-03-08 17:41:01,454 - INFO (coalesce_expressions): Coalescing summary table intrazonal_distance_by_mode_summary
2023-03-08 17:41:01,456 - INFO (coalesce_expressions): Coalescing summary table transit_summary
2023-03-08 17:41:01,457 - INFO (coalesce_expressions): Coalescing summary table trip_tod_purpose_summary
2023-03-08 17:41:01,459 - INFO (coalesce_expressions): Coalescing summary table trip_od_summary
2023-03-08 17:41:01,592 - INFO (coalesce_expressions): Coalescing summary table zero_car_households_summary
2023-03-08 17:41:01,594 - INFO (coalesce_expressions): Coalescing summary table households_sample_mgra_summary
2023-03-08 17:41:01,596 - INFO (coalesce_expressions): Coalescing summary table households_mgra_summary
2023-03-08 17:41:01,598 - INFO (coalesce_expressions): Coalescing summary table network_summary
2023-03-08 17:41:01,601 - INFO (coalesce_expressions): Coalescing summary table vmt_summary
2023-03-08 17:41:01,604 - INFO (process): Raw evaluating transit_summary['PCT_EA'] = transit_summary['EA']/transit_summary['EA'].sum()
2023-03-08 17:41:01,606 - INFO (process): Raw evaluating transit_summary['PCT_AM'] = transit_summary['AM']/transit_summary['AM'].sum()
2023-03-08 17:41:01,607 - INFO (process): Raw evaluating transit_summary['PCT_MD'] = transit_summary['MD']/transit_summary['MD'].sum()
2023-03-08 17:41:01,609 - INFO (process): Raw evaluating transit_summary['PCT_PM'] = transit_summary['PM']/transit_summary['PM'].sum()
2023-03-08 17:41:01,611 - INFO (process): Raw evaluating transit_summary['PCT_EV'] = transit_summary['EV']/transit_summary['EV'].sum()
2023-03-08 17:41:01,613 - INFO (process): Raw evaluating trip_mode_summary['share'] = trip_mode_summary['num_trips']/trip_mode_summary['num_trips'].sum()
2023-03-08 17:41:01,614 - INFO (process): Raw evaluating trip_tod_purpose_summary['PCT_EA'] = trip_tod_purpose_summary['EA']/trip_tod_purpose_summary['EA'].sum()
2023-03-08 17:41:01,615 - INFO (process): Raw evaluating trip_tod_purpose_summary['PCT_AM'] = trip_tod_purpose_summary['AM']/trip_tod_purpose_summary['AM'].sum()
2023-03-08 17:41:01,617 - INFO (process): Raw evaluating trip_tod_purpose_summary['PCT_MD'] = trip_tod_purpose_summary['MD']/trip_tod_purpose_summary['MD'].sum()
2023-03-08 17:41:01,621 - INFO (process): Raw evaluating trip_tod_purpose_summary['PCT_PM'] = trip_tod_purpose_summary['PM']/trip_tod_purpose_summary['PM'].sum()
2023-03-08 17:41:01,622 - INFO (process): Raw evaluating trip_tod_purpose_summary['PCT_EV'] = trip_tod_purpose_summary['EV']/trip_tod_purpose_summary['EV'].sum()
2023-03-08 17:41:01,624 - INFO (process): Raw evaluating households_mgra_summary = pd.merge(households_mgra_summary, households_sample_mgra_summary,left_on='cluster_id', right_on='cluster_id')
2023-03-08 17:41:01,628 - INFO (process): Raw evaluating households_sample_mgra_summary['sample_rate'] = households_mgra_summary['sampled_households'] / households_mgra_summary['original_households']
2023-03-08 17:41:01,630 - INFO (process): Renaming vmt_summary columns using {'ifc_desc': 'class'}
2023-03-08 17:41:01,631 - INFO (process): Renaming zero_car_households_summary columns using {'cluster_id': 'mgra'}
2023-03-08 17:41:01,633 - INFO (process): Renaming households_sample_mgra_summary columns using {'cluster_id': 'mgra'}
2023-03-08 17:41:01,635 - INFO (write_results): Writing trip_mode_summary.csv
2023-03-08 17:41:01,639 - INFO (write_results): Writing intrazonal_distance_by_mode_summary.csv
2023-03-08 17:41:01,641 - INFO (write_results): Writing transit_summary.csv
2023-03-08 17:41:01,645 - INFO (write_results): Writing trip_tod_purpose_summary.csv
2023-03-08 17:41:01,647 - INFO (write_results): Writing trip_od_summary.csv
2023-03-08 17:41:05,027 - INFO (write_results): Writing zero_car_households_summary.csv
2023-03-08 17:41:05,035 - INFO (write_results): Writing households_sample_mgra_summary.csv
2023-03-08 17:41:05,046 - INFO (write_results): Writing households_mgra_summary.csv
2023-03-08 17:41:05,056 - INFO (write_results): Writing network_summary.csv
2023-03-08 17:41:05,072 - INFO (write_results): Writing vmt_summary.csv
